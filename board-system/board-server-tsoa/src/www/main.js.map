{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/service/api.service.ts","webpack:///./src/app/service/auth.service.ts","webpack:///./src/app/service/page.service.ts","webpack:///./src/app/shared/footer/footer.component.css","webpack:///./src/app/shared/footer/footer.component.html","webpack:///./src/app/shared/footer/footer.component.ts","webpack:///./src/app/shared/header/header.component.css","webpack:///./src/app/shared/header/header.component.html","webpack:///./src/app/shared/header/header.component.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/views/account/account.component.css","webpack:///./src/app/views/account/account.component.html","webpack:///./src/app/views/account/account.component.ts","webpack:///./src/app/views/board/board-detail/board-detail.component.css","webpack:///./src/app/views/board/board-detail/board-detail.component.html","webpack:///./src/app/views/board/board-detail/board-detail.component.ts","webpack:///./src/app/views/board/board-insert-form/board-insert-form.component.css","webpack:///./src/app/views/board/board-insert-form/board-insert-form.component.html","webpack:///./src/app/views/board/board-insert-form/board-insert-form.component.ts","webpack:///./src/app/views/board/board-list/board-list.component.css","webpack:///./src/app/views/board/board-list/board-list.component.html","webpack:///./src/app/views/board/board-list/board-list.component.ts","webpack:///./src/app/views/board/board-routing.module.ts","webpack:///./src/app/views/board/board.component.css","webpack:///./src/app/views/board/board.component.html","webpack:///./src/app/views/board/board.component.ts","webpack:///./src/app/views/board/board.module.ts","webpack:///./src/app/views/login/login.component.css","webpack:///./src/app/views/login/login.component.html","webpack:///./src/app/views/login/login.component.ts","webpack:///./src/app/views/main/main.component.css","webpack:///./src/app/views/main/main.component.html","webpack:///./src/app/views/main/main.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AccountComponent } from './views/account/account.component';\nimport { BoardComponent } from './views/board/board.component';\nimport { LoginComponent } from './views/login/login.component';\nimport { MainComponent } from './views/main/main.component';\nimport {  AuthGuard  } from  './auth/auth.guard';\n\nconst routes: Routes = [\n  {path : '', component: MainComponent},  \n  {path : 'account', component: AccountComponent },  \n  {path : 'login', component: LoginComponent},  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".bd-placeholder-img {\\r\\n    font-size: 1.125rem;\\r\\n    text-anchor: middle;\\r\\n    -webkit-user-select: none;\\r\\n    -moz-user-select: none;\\r\\n    user-select: none;\\r\\n  }\\r\\n\\r\\n  @media (min-width: 768px) {\\r\\n    .bd-placeholder-img-lg {\\r\\n      font-size: 3.5rem;\\r\\n    }\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQkFBbUI7SUFDbkIsbUJBQW1CO0lBQ25CLHlCQUF5QjtJQUN6QixzQkFBc0I7SUFDdEIsaUJBQWlCO0VBQ25COztFQUVBO0lBQ0U7TUFDRSxpQkFBaUI7SUFDbkI7RUFDRiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJkLXBsYWNlaG9sZGVyLWltZyB7XHJcbiAgICBmb250LXNpemU6IDEuMTI1cmVtO1xyXG4gICAgdGV4dC1hbmNob3I6IG1pZGRsZTtcclxuICAgIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xyXG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcclxuICAgIC5iZC1wbGFjZWhvbGRlci1pbWctbGcge1xyXG4gICAgICBmb250LXNpemU6IDMuNXJlbTtcclxuICAgIH1cclxuICB9Il19 */\"","module.exports = \"<app-header></app-header>\\r\\n<div class=\\\"container\\\">\\r\\n<main>\\r\\n  <router-outlet></router-outlet>\\r\\n</main>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { ApiService } from './service/api.service';\r\nimport { PageService } from './service/page.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit{\r\n  title = 'board-client';\r\n  token: string;\r\n\r\n  constructor(private apiService : ApiService, private pageService: PageService){\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  onTokenChangeListener() {\r\n    const token = this.apiService.getLoginToken();\r\n    if (!token && this.apiService.isLoginTokenExpired(token)) {\r\n      console.log('force move to login.');\r\n      this.pageService.moveTo('login');\r\n    } \r\n  }\r\n}\r\n ","import { BrowserModule } from '@angular/platform-browser';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http'\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ApiService } from './service/api.service';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { BoardModule } from './views/board/board.module';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { MainComponent } from './views/main/main.component';\r\nimport { AccountComponent } from './views/account/account.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LoginComponent } from './views/login/login.component';\r\nimport { AuthService } from './service/auth.service';\r\nimport { PageService } from './service/page.service';\r\n\r\nexport function jwtTokenGetter(){\r\n  return localStorage.getItem('token');\r\n}\r\n@NgModule({\r\n  declarations: [ //컴포넌트, 디렉티브, 파이프의 리스트를 선언. 모듈에 선언된 구성요소는 모듈 내에서 사용 가능하다.\r\n    AppComponent,\r\n    MainComponent,\r\n    AccountComponent,\r\n    LoginComponent,\r\n  ],\r\n  imports: [  //의존 관계의 앵귤러 라이브러리 모듈, 기능 모듈(하위 모듈), 라우팅 모듈, 서브 파티 모듈 등을 선언한다.\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,    \r\n    JwtModule.forRoot({\r\n      config: {\r\n         tokenGetter: jwtTokenGetter,\r\n         allowedDomains: ['localhost:4200', 'localhost:8080'],\r\n      }\r\n    }),\r\n    BoardModule,  \r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n  ],\r\n  providers: [  //providers : 서비스(Injectable object)의 리스트 선언. 루트 모듈에 선언된 서비스는 애플리케이션 전역에서 사용 가능하다.\r\n    ApiService,\r\n    AuthService,\r\n    PageService\r\n  ],\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA  //앵귤러 전용 태그 사용을 위한 스키마\r\n  ],\r\n  bootstrap: [AppComponent] //루트 모듈에서 사용하는 프로퍼티. 진입점인 루트 컴포넌트를 설정\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../service/api.service';\nimport { AuthService } from '../service/auth.service';\nimport jwt_decode from 'jwt-decode';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate{\n\n  constructor(private router: Router, private apiService : ApiService, private authService : AuthService) {\n  }\n\n  getDecodedAccessToken(token: string): any {\n    try{\n        return jwt_decode(token);\n    }\n    catch(Error){\n        return null;\n    }\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      const token = this.apiService.getLoginToken();\n      if (!token || this.apiService.isLoginTokenExpired(token)) {\n        this.router.navigate(['login']);\n        this.authService.logoutSet();\n        return false;\n      } \n      if (this.authService.isLogedIn != true){\n        this.authService.loginSet(token);\n      }\n      return true;\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Token } from '@angular/compiler/src/ml_parser/lexer';\r\nimport { Injectable } from '@angular/core';\r\nimport { concat, Observable, Observer } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { UserRequestModel } from '../models/UserModel';\r\nimport ResponseModel from '../models/ResponseModel';\r\nimport { catchError, map, takeUntil } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  apiHost: string;\r\n  TOKEN_NAME = 'jwtauthToken';\r\n  LOGIN_TOKEN = 'loginAuthToken'\r\n\r\n  constructor(private http : HttpClient, private jwtHelper: JwtHelperService) {\r\n    this.apiHost = environment.apiHost;\r\n    this.http = http;\r\n    console.log(this.apiHost);\r\n  }\r\n\r\n  //토큰 발급\r\n  token_signin() {\r\n    console.log('발급', this.apiHost);\r\n    return this.http.post<ResponseModel>(`${this.apiHost}/auth/token`, {\r\n        'origin': environment.clientHost,\r\n        'clientSecret': environment.clientSecret,\r\n    });\r\n  }\r\n  //클라이언트 단에 저장된 토큰 GET\r\n  getToken(): string {\r\n    console.log(\"getToken()\", localStorage.getItem(this.TOKEN_NAME));\r\n    return localStorage.getItem(this.TOKEN_NAME);\r\n  }\r\n\r\n  //클라이언트 단에 토큰 SET\r\n  setToken(token: string) {\r\n    console.log('setToken()');\r\n    localStorage.setItem(this.TOKEN_NAME, token);\r\n  }\r\n\r\n  //클라이언트 단의 토큰 DELETE\r\n  removeToken() {\r\n    console.log('removeToken()');\r\n    localStorage.removeItem(this.TOKEN_NAME);\r\n  }\r\n\r\n  //클라이언트 단의 토큰 유효기간 체크\r\n  isTokenExpired(token: string) {\r\n    console.log(\"tokenExpired\");\r\n    return this.jwtHelper.isTokenExpired(token);\r\n  }\r\n\r\n\r\n  public get_api_request<T> (url : string) : Observable<T>{\r\n    try{\r\n      if(this.getToken() == undefined || this.getToken() == null || this.isTokenExpired(this.getToken())){\r\n        return new Observable<T>((observer: Observer<T>) => {\r\n          this.token_signin() //1. 토큰 발급\r\n          .subscribe((tokenAuth : ResponseModel) => {  //2. 토큰 발급 완료 시 토큰 세팅\r\n            this.setToken(tokenAuth.data);\r\n            console.log(tokenAuth.data)\r\n            this.http.get<T>(url, { //3. 서버에 HTTP 요청\r\n              headers: {Authorization: `Bearer ${this.getToken() || ''}`}\r\n            }).subscribe((resultModel : T) => { \r\n              observer.next(resultModel); //4. 요청 완료 시 observer를 반응시킴(값 변환시점)\r\n              observer.complete();\r\n            })\r\n          })\r\n        });\r\n      }\r\n      return this.http.get<T>(url, {\r\n        headers: {authorization: `Bearer ${this.getToken() || ''}`}\r\n      });\r\n    }\r\n    catch(error){\r\n      if(error.status === 419){\r\n        console.log(\"토큰 만료\", error);\r\n        return this.get_api_request(url);\r\n      }\r\n      else{\r\n        console.log(\"서버 오류 or 유효하지 않은 사용자\", error);\r\n        return error.response;\r\n      }\r\n    }\r\n  }\r\n\r\n  public post_api_request<T> (url : string, data) : Observable<T>{\r\n    try{\r\n      if(this.getToken() == undefined || this.getToken() == null || this.isTokenExpired(this.getToken())){\r\n        return new Observable<T>((observer: Observer<T>) => {\r\n          this.token_signin() //1. 토큰 발급\r\n          .subscribe((tokenAuth : ResponseModel) => {  //2. 토큰 발급 완료 시 토큰 세팅\r\n            this.setToken(tokenAuth.data);\r\n            this.http.post<T>(url, data, { //3. 서버에 HTTP 요청\r\n              headers: {Authorization: `Bearer ${this.getToken() || ''}`}\r\n            }).subscribe((resultModel : T) => { \r\n              observer.next(resultModel); //4. 요청 완료 시 observer를 반응시킴(값 변환시점)\r\n              observer.complete();\r\n            })\r\n          })\r\n        });\r\n      }\r\n      return this.http.post<T>(url, data, {\r\n        headers: {Authorization: `Bearer ${this.getToken() || ''}`}\r\n      });\r\n    }\r\n    catch(error){\r\n      if(error.status === 419){\r\n        console.log(\"토큰 만료\", error);\r\n        return this.post_api_request(url, data);\r\n      }\r\n      else{\r\n        console.log(\"서버 오류 or 유효하지 않은 사용자\", error);\r\n        return error.response;\r\n      }\r\n    }\r\n  }\r\n\r\n  /* Login Auth API Reqeust */\r\n\r\n  //로그인 토큰 발급\r\n  login_signin(user : UserRequestModel) {\r\n    return this.http.post<ResponseModel>(`${this.apiHost}/auth/login`, {\r\n        'email': user.email,\r\n        'password': user.password,\r\n    });\r\n  }\r\n\r\n  //클라이언트 단에 저장된 토큰 GET\r\n  getLoginToken(): string {\r\n    return localStorage.getItem(this.LOGIN_TOKEN);\r\n  }\r\n\r\n  //클라이언트 단에 토큰 SET\r\n  setLoginToken(token: string) {\r\n    if(token){\r\n      console.log('setToken()', token);\r\n      localStorage.setItem(this.LOGIN_TOKEN, token);\r\n    }\r\n  }\r\n\r\n  //클라이언트 단의 토큰 DELETE\r\n  removeLoginToken() {\r\n    localStorage.removeItem(this.LOGIN_TOKEN);\r\n  }\r\n\r\n  //클라이언트 단의 토큰 유효기간 체크\r\n  isLoginTokenExpired(token: string) {\r\n    const isExpire = this.jwtHelper.isTokenExpired(token);\r\n    if(isExpire){\r\n      this.removeLoginToken();\r\n    }\r\n    return isExpire;\r\n  }\r\n\r\n  //로그인 요청\r\n  public login_api (user : UserRequestModel) : Observable<ResponseModel>{\r\n    try{\r\n      return new Observable<ResponseModel>((observer: Observer<ResponseModel>) => {\r\n        this.login_signin(user) //1. 토큰 발급\r\n        .subscribe((result : ResponseModel) => {  //2. 토큰 발급 완료 시 토큰 세팅\r\n          this.setLoginToken(result.data);            \r\n          observer.next(result); //4. 요청 완료 시 observer를 반응시킴(값 변환시점)\r\n          observer.complete();\r\n        }, (error) => {                         \r\n          observer.next(error);\r\n          observer.complete();\r\n        });\r\n      });      \r\n    }\r\n    catch(error){\r\n      console.log(\"인증 실패\", error);\r\n      return new Observable<ResponseModel>((observer: Observer<ResponseModel>) => {      \r\n        observer.next({\r\n          success : false\r\n        } as ResponseModel); \r\n        observer.complete();\r\n      });\r\n    }\r\n  }\r\n\r\n  //GET Reqeust with Login Auth\r\n  public get_api_request_signin (url : string) : Observable<ResponseModel>{\r\n    try{\r\n      if(this.getLoginToken() == undefined || this.getLoginToken() == null || this.isLoginTokenExpired(this.getLoginToken())){\r\n        return;\r\n      }\r\n      return this.http.get<ResponseModel>(url, {\r\n        headers: {authorization: `Bearer ${this.getLoginToken() || ''}`}\r\n      })\r\n      .pipe(\r\n        map((res: ResponseModel) => {\r\n          if(res.token){\r\n            console.log('RESET TOKEN')\r\n            this.setLoginToken(res.token);\r\n          }\r\n          if (!res.success) {\r\n            console.log(\"App error\");\r\n          }\r\n          return res;\r\n        }),\r\n        catchError((err, caught: Observable<ResponseModel>): never => {\r\n          throw new Error(err);\r\n        }),\r\n      );\r\n  \r\n    }\r\n    catch(error){\r\n      if(error.status === 419){\r\n        console.log(\"토큰 만료\", error);\r\n        return error.response;\r\n      }\r\n      else{\r\n        console.log(\"서버 오류 or 유효하지 않은 사용자\", error);\r\n        return error.response;\r\n      }\r\n    }\r\n  }\r\n\r\n  //POST Reqeust with Login Auth\r\n  public post_api_request_signin (url : string, data) : Observable<ResponseModel>{\r\n    try{\r\n      if(this.getLoginToken() == undefined || this.getLoginToken() == null || this.isLoginTokenExpired(this.getLoginToken())){\r\n        return;\r\n      }\r\n      return this.http.post<ResponseModel>(url, data, { //3. 서버에 HTTP 요청\r\n        headers: {Authorization: `Bearer ${this.getToken() || ''}`}\r\n      })\r\n      .pipe(\r\n        map((res: ResponseModel) => {\r\n          if(res.token){\r\n            console.log('RESET TOKEN')\r\n            this.setLoginToken(res.token);\r\n          }\r\n          if (!res.success) {\r\n            console.log(\"App error\");\r\n          }\r\n          return res;\r\n        }),\r\n        catchError((err, caught: Observable<ResponseModel>): never => {\r\n          throw new Error(err);\r\n        }),\r\n      );\r\n  \r\n    }\r\n    catch(error){\r\n      if(error.status === 419){\r\n        console.log(\"토큰 만료\", error);\r\n        return error.response;\r\n      }\r\n      else{\r\n        console.log(\"서버 오류 or 유효하지 않은 사용자\", error);\r\n        return error.response;\r\n      }\r\n    }\r\n  }\r\n\r\n  /*\r\n  public async get_api_promise<T> (url : string) : Promise<T>{\r\n    try{\r\n      //클라이언트 단에 토큰이 없거나 유효기간 만료시 재발급\r\n      if(this.getToken() == undefined || this.getToken() == null || this.isTokenExpired(this.getToken())){\r\n          this.removeToken();\r\n          const result_token = await this.token_signin().toPromise();\r\n          await this.setToken(result_token.token);\r\n      }\r\n      //토큰을 헤더에 넣어 요청\r\n      return this.http.get<T>(url, {\r\n        headers: {authorization: this.getToken()}\r\n      }).toPromise();    \r\n    }\r\n    catch(error){\r\n      //토큰 만료 에러시 재요청\r\n      if(error.status === 419){\r\n        console.log(\"토큰 만료\", error);\r\n        return this.get_api_promise<T>(url);\r\n      }\r\n      else{\r\n        console.log(\"서버 오류\", error);\r\n        return error.response;\r\n      }\r\n    }\r\n  }\r\n  */\r\n}\r\n","import { Injectable } from '@angular/core';\nimport jwt_decode from 'jwt-decode';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  isLogedIn : boolean;\n  nick : string;\n\n  constructor() { \n    this.isLogedIn = false;\n    this.nick = \"\";\n  }\n\n  getDecodedAccessToken(token: string): any {\n    try{\n        return jwt_decode(token);\n    }\n    catch(Error){\n        return null;\n    }\n  }\n\n  loginSet(token : string){\n    this.isLogedIn = true;\n    const decodedToken = this.getDecodedAccessToken(token);\n    this.nick = decodedToken.nick;\n  }\n\n  logoutSet(){\n    this.isLogedIn = false;\n    this.nick = \"\";\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class PageService {\n\n  lastEnteredMenu: any;\n\n  constructor(private router: Router, public zone: NgZone) {\n\n  }\n\n\n  moveTo(url: string) {\n    this.zone.run(() => {\n      console.log(`[pageService] [moveTo] Move to ${url}`);\n      this.router.navigate([url]);\n    });\n  }\n\n\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<footer class=\\\"text-muted py-5\\\">\\n  <div class=\\\"container\\\">\\n    <p class=\\\"float-end mb-1\\\">\\n      <a href=\\\"#\\\">Back to top</a>\\n    </p>\\n    <p class=\\\"mb-1\\\">Album example is &copy; Bootstrap, but please download and customize it for yourself!</p>\\n    <p class=\\\"mb-0\\\">New to Bootstrap? <a href=\\\"/\\\">Visit the homepage</a> or read our <a href=\\\"/docs/5.0/getting-started/introduction/\\\">getting started guide</a>.</p>\\n  </div>\\n</footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<header>\\n  <div class=\\\"collapse bg-dark\\\" id=\\\"navbarHeader\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-8 col-md-7 py-4\\\">\\n          <h4 class=\\\"text-white\\\">Author : Jaewhi-so</h4>\\n          <p class=\\\"text-muted\\\">Use Angular Front-end and Node.js Server API </p>\\n        </div>\\n        <div class=\\\"col-sm-4 offset-md-1 py-4\\\">\\n          <h4 class=\\\"text-white\\\">Content</h4>\\n          <ul class=\\\"list-unstyled\\\">\\n            <li><a routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\">Main</a></li>\\n            <li><a routerLink=\\\"/board\\\" routerLinkActive=\\\"active\\\">Board</a></li>\\n            <li><a routerLink=\\\"/account\\\" routerLinkActive=\\\"active\\\">Get Account!</a></li>\\n          </ul>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"navbar navbar-dark bg-dark shadow-sm\\\">\\n    <div class=\\\"container\\\">\\n      <a href=\\\"#\\\" class=\\\"navbar-brand d-flex align-items-center\\\">\\n        <strong>Tiny Web</strong>\\n      </a>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#navbarHeader\\\" aria-controls=\\\"navbarHeader\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n    </div>\\n  </div>\\n<div class=\\\"row bg-dark\\\" *ngIf=\\\"authService.isLogedIn\\\">\\n  <div class=\\\"col-md-5\\\" style=\\\"margin : 15px\\\">\\n    <span style=\\\"color:white\\\">{{authService.nick}}님 환영합니다  </span>\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"logOut()\\\">로그아웃</button>\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n  </div>\\n</div>\\n</header>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport jwt_decode from 'jwt-decode';\nimport { ApiService } from 'src/app/service/api.service';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { PageService } from 'src/app/service/page.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  isLogin : boolean;\n  nick : string;\n  constructor(private apiService : ApiService, public authService : AuthService, private router: Router, private pageService : PageService) { \n\n  }\n\n  getDecodedAccessToken(token: string): any {\n    try{\n        return jwt_decode(token);\n    }\n    catch(Error){\n        return null;\n    }\n  }\n\n  ngOnInit() {\n    \n  }\n\n  logOut(){\n    this.apiService.removeLoginToken();\n    this.authService.logoutSet();\n    alert('로그아웃 성공');\n    this.pageService.moveTo('/');\n\n  }\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { AppRoutingModule } from '../app-routing.module';\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    FooterComponent\n  ],\n  imports: [\n    CommonModule,\n    AppRoutingModule,\n  ],\n  exports: [  //컴포넌트 공개\n    HeaderComponent,\n    FooterComponent\n  ]\n})\nexport class SharedModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2FjY291bnQvYWNjb3VudC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<section class=\\\"py-5 text-center container\\\">\\n  <div class=\\\"row py-lg-5\\\">\\n    <div class=\\\"col-lg-6 col-md-8 mx-auto\\\">\\n      <h1 class=\\\"fw-light\\\">Account</h1>\\n      <p class=\\\"lead text-muted\\\">Get Your Account!</p>\\n    </div>\\n  </div>\\n</section>\\n<div class=\\\"col-md-7 col-lg-12\\\">\\n  <form class=\\\"needs-validation\\\" [formGroup]=\\\"insertForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"row g-3\\\">\\n      <div class=\\\"col-sm-4\\\">\\n        <label for=\\\"email\\\" class=\\\"form-label\\\">이메일</label>\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"Insert email\\\" formControlName=\\\"email\\\" required >\\n        <div class=\\\"invalid-feedback\\\">\\n          <app-form-handler *ngIf=\\\"insertForm.get('email').errors\\\" [formGroupErrors]='insertForm.get(\\\"email\\\").errors'></app-form-handler>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-sm-4\\\">\\n        <label for=\\\"nick\\\" class=\\\"form-label\\\">닉네임</label>\\n        <input type=\\\"nick\\\" class=\\\"form-control\\\" id=\\\"nick\\\" formControlName=\\\"nick\\\" required>\\n        <div class=\\\"invalid-feedback\\\">\\n          <app-form-handler *ngIf=\\\"insertForm.get('nick').errors\\\" [formGroupErrors]='insertForm.get(\\\"nick\\\").errors'></app-form-handler>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-sm-4\\\">\\n        <label for=\\\"password\\\" class=\\\"form-label\\\">비밀번호</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" formControlName=\\\"password\\\" required>\\n        <div class=\\\"invalid-feedback\\\">\\n          <app-form-handler *ngIf=\\\"insertForm.get('password').errors\\\" [formGroupErrors]='insertForm.get(\\\"password\\\").errors'></app-form-handler>\\n        </div>\\n      </div>\\n    </div>\\n    <hr class=\\\"my-4\\\">\\n    <button class=\\\"w-100 btn btn-primary btn-lg\\\" type=\\\"submit\\\" [disabled]=\\\"!insertForm.valid\\\">가입</button>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BoardModel, BoardRequestModel } from 'src/app/models/BoardModel';\nimport ResponseModel from 'src/app/models/ResponseModel';\nimport { UserRequestModel } from 'src/app/models/UserModel';\nimport { ApiService } from 'src/app/service/api.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n\n  apiUrl = environment.apiHost;\n  formData : FormData;\n  insertForm: FormGroup;  //여러개의 FormControl을 다루기 위해 FormGroup 사용\n  userReqModel : UserRequestModel;\n\n\n  constructor(private apiService : ApiService, private fb: FormBuilder, private router : Router) { \n    this.insertForm = this.fb.group({   //유효성 체크.\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n      nick: ['', [Validators.required]],\n    });\n    this.userReqModel = {} as UserRequestModel\n  }\n\n  ngOnInit() {\n    \n  }\n  updateRequestForm(){\n    const { email, password, nick } = this.insertForm.controls;\n    this.userReqModel.email = email.value\n    this.userReqModel.password = password.value\n    this.userReqModel.nick = nick.value\n  }\n\n  onSubmit(){\n    this.updateRequestForm()\n    console.log(this.userReqModel);\n    this.apiService.post_api_request(`${this.apiUrl}/user`, this.userReqModel)\n    .subscribe((res : ResponseModel) => {\n      if(res.success == true){\n        console.log('성공');\n        alert(\"회원 가입에 성공했습니다.\")\n        this.router.navigateByUrl('/');\n      }\n      else{\n        console.log('회원 가입에 실패했습니다.');\n      }\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2JvYXJkL2JvYXJkLWRldGFpbC9ib2FyZC1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"col-md-12\\\">\\n  <div class=\\\"row g-0 border rounded overflow-hidden flex-md-row mb-4 shadow-sm h-md-250 position-relative\\\">\\n    <div class=\\\"col-md-7 d-flex flex-column position-static\\\">\\n      <h1 class=\\\"d-inline-block mb-2 text-primary\\\" *ngIf=\\\"board\\\">{{board.title}}</h1>\\n      <h4 class=\\\"mb-0\\\" *ngIf=\\\"board\\\">{{board.nick}}</h4>\\n      <div class=\\\"mb-1 text-muted\\\" *ngIf=\\\"board\\\">{{board.createdAt}}</div>\\n      <br>\\n      <p class=\\\"card-text mb-auto\\\" *ngIf=\\\"board\\\">{{board.content}}</p>\\n      <a [routerLink]=\\\"['/board/list']\\\" [queryParams]=\\\"{ page: page }\\\" [routerLinkActive]=\\\"['active']\\\" class=\\\"stretched-link\\\">Continue reading</a>\\n    </div>\\n    <div class=\\\"col-md-5 d-flex d-lg-block\\\">\\n      <img *ngIf=\\\"board\\\" src=\\\"{{loadImg(board.ridx)}}\\\" width=100% height=\\\"500\\\">\\n\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport 'rxjs/add/operator/map';\nimport { BoardModel } from 'src/app/models/BoardModel';\nimport ResponseModel from 'src/app/models/ResponseModel';\nimport { ApiService } from 'src/app/service/api.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-board-detail',\n  templateUrl: './board-detail.component.html',\n  styleUrls: ['./board-detail.component.css']\n})\nexport class BoardDetailComponent implements OnInit {\n  id : string;\n  apiUrl = environment.apiHost;\n  board : BoardModel;\n  page : number = 0;\n  \n  constructor(private route : ActivatedRoute, private apiService : ApiService) { \n    this.id = this.route.snapshot.paramMap.get('id');\n    if(this.route.snapshot.queryParamMap.get('page')){\n      this.page = Number(this.route.snapshot.queryParamMap.get('page'));\n    }\n    const board$ = this.apiService.get_api_request_signin(`${this.apiUrl}/board/${this.id}`);\n    board$.subscribe((res : ResponseModel) => {\n      if(res.success == true){\n        this.board = res.data;\n        console.log(this.board, this.board.title, this.board.content);\n      }\n    });\n  }\n\n  ngOnInit() {\n    \n\n  }\n\n  loadImg(id : number) {\n    if(id == null || id == undefined){\n      return 'assets/img/lazyImage.jpg';\n    }\n    return `${this.apiUrl}/resource/image?id=${id}`;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2JvYXJkL2JvYXJkLWluc2VydC1mb3JtL2JvYXJkLWluc2VydC1mb3JtLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"col-md-7 col-lg-12\\\">\\n  <h4 class=\\\"mb-3\\\">게시글 추가</h4>\\n  <form class=\\\"needs-validation\\\" [formGroup]=\\\"insertForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"row g-3\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <label for=\\\"title\\\" class=\\\"form-label\\\">제목</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\" placeholder=\\\"Insert title\\\" formControlName=\\\"title\\\" required >\\n        <div class=\\\"invalid-feedback\\\">\\n          <app-form-handler *ngIf=\\\"insertForm.get('title').errors\\\" [formGroupErrors]='insertForm.get(\\\"title\\\").errors'></app-form-handler>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-sm-6\\\">\\n        <label for=\\\"lastName\\\" class=\\\"form-label\\\">닉네임</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nick\\\" formControlName=\\\"nick\\\" required>\\n        <div class=\\\"invalid-feedback\\\">\\n          <app-form-handler *ngIf=\\\"insertForm.get('nick').errors\\\" [formGroupErrors]='insertForm.get(\\\"nick\\\").errors'></app-form-handler>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-12\\\">\\n        <div class=\\\"md-form amber-textarea active-amber-textarea-2\\\">\\n          <textarea id=\\\"content\\\" class=\\\"md-textarea form-control\\\" rows=\\\"15\\\" id=\\\"content\\\" formControlName=\\\"content\\\" required></textarea>\\n          <div class=\\\"invalid-feedback\\\">\\n            <app-form-handler *ngIf=\\\"insertForm.get('content').errors\\\" [formGroupErrors]='insertForm.get(\\\"content\\\").errors'></app-form-handler>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-12\\\">\\n        <label for=\\\"file\\\" class=\\\"form-label\\\">사진</label>\\n          <input type=\\\"file\\\" class=\\\"form-control\\\" id=\\\"file\\\" accept=\\\"image/*\\\" (change)=\\\"onFileChange(fileInput.files)\\\" #fileInput>\\n          <div class=\\\"invalid-feedback\\\">\\n            Your username is required.\\n          </div>\\n      </div>\\n      <img *ngIf=\\\"imageSrc\\\" [src]=\\\"imageSrc\\\" class=\\\"avatar\\\">\\n    </div>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ridx\\\" formControlName=\\\"ridx\\\" style=\\\"visibility:hidden\\\">\\n    <hr class=\\\"my-4\\\">\\n    <button class=\\\"w-100 btn btn-primary btn-lg\\\" type=\\\"submit\\\" [disabled]=\\\"!insertForm.valid\\\">게시</button>\\n  </form>\\n</div>\\n\\n  \\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BoardModel, BoardRequestModel } from 'src/app/models/BoardModel';\nimport ResponseModel from 'src/app/models/ResponseModel';\nimport { ApiService } from 'src/app/service/api.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-board-insert-form',\n  templateUrl: './board-insert-form.component.html',\n  styleUrls: ['./board-insert-form.component.css']\n})\nexport class BoardInsertFormComponent implements OnInit {\n  boardModel : BoardModel;\n  apiUrl = environment.apiHost;\n  imageSrc : string | ArrayBuffer = '#';\n  formData : FormData;\n  insertForm: FormGroup;  //여러개의 FormControl을 다루기 위해 FormGroup 사용\n  boardRequestModel : BoardRequestModel;\n\n\n  constructor(private apiService : ApiService, private fb: FormBuilder, private router : Router) { \n    this.insertForm = this.fb.group({   //유효성 체크.\n      title: ['', [Validators.required]],\n      nick: ['', [Validators.required]],\n      content: ['', [Validators.required]],\n      ridx: ['']\n    });\n    this.boardRequestModel = {\n      id : null,\n      title : null,\n      nick : null,\n      content : null,\n      ridx : null,\n    }\n  }\n\n  ngOnInit() {\n    \n  }\n  updateRequestForm(){\n    const { title, content, nick, ridx } = this.insertForm.controls;\n    this.boardRequestModel.title = title.value\n    this.boardRequestModel.content = content.value\n    this.boardRequestModel.nick = nick.value\n    this.boardRequestModel.ridx = ridx.value || null\n  }\n\n  onFileChange(files : FileList){\n    console.log(files);\n    if (files && files.length > 0) {\n      // For Preview\n      const file = files[0];\n      this.formData = new FormData();\n      this.formData.append('file', file);      \n      this.apiService.post_api_request_signin(`${this.apiUrl}/resource/single`, this.formData)\n      .subscribe((res : ResponseModel) => {\n        console.log('요청은 보냄');\n        if(res.success == true){\n          /* 브라우저는 보안 문제로 인해 파일 경로의 참조를 허용하지 않는다.\n          따라서 파일 경로를 img 태그에 바인딩할 수 없다.\n          FileReader.readAsDataURL 메소드를 사용하여 이미지 파일을 읽어\n          base64 인코딩된 스트링 데이터를 취득한 후, img 태그에 바인딩한다. */\n          this.insertForm.controls.ridx.setValue(res.data.id);\n          reader.readAsDataURL(file);\n          reader.onload = () => {\n            this.imageSrc = reader.result;\n          };  \n          /* reactive form에서 input[type=\"file\"]을 지원하지 않는다.\n            즉 파일 선택 시에 값이 폼컨트롤에 set되지 않는다\n            https://github.com/angular/angular.io/issues/3466\n            form validation을 위해 file.name을 폼컨트롤에 set한다. */\n          //this.insertForm.get('file').setValue(file.name);  \n        }\n        else{\n          console.log('실패');\n        }\n      });\n      const reader = new FileReader();\n\n\n    }\n  }\n\n  onSubmit(){\n    this.updateRequestForm()\n    console.log(this.boardRequestModel);\n    this.apiService.post_api_request_signin(`${this.apiUrl}/board`, this.boardRequestModel)\n    .subscribe((res : ResponseModel) => {\n      if(res.success == true){\n        console.log('성공');\n        alert(\"게시물을 등록하였습니다.\")\n        this.router.navigateByUrl('/board/list');\n      }\n      else{\n        console.log('실패.');\n      }\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2JvYXJkL2JvYXJkLWxpc3QvYm9hcmQtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"album py-5 bg-light\\\">\\n  <div class=\\\"container\\\">\\n    <div [class]=\\\"'row row-cols-md-' + prefix\\\">\\n      <div *ngFor=\\\"let board of boards\\\">\\n        <div class=\\\"col\\\">\\n          <div class=\\\"card shadow-sm\\\">\\n            <img width=100% height=\\\"220\\\" src=\\\"{{loadImg(board.ridx)}}\\\">\\n            <div class=\\\"card-body\\\">\\n              <p class=\\\"card-text\\\">{{board.title}}</p>\\n              <div class=\\\"d-flex justify-content-between align-items-center\\\">\\n                <div class=\\\"btn-group\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-secondary\\\" (click)=\\\"detail_view(board.id);\\\">View</button>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-secondary\\\">Edit</button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<ngb-pagination [collectionSize]=\\\"pager.collectionSize\\\" [pageSize]=\\\"pager.pageSize\\\" [(page)]=\\\"pager.page\\\" [maxSize]=\\\"pager.maxSize\\\" (pageChange)=\\\"pageChanged($event)\\\" aria-label=\\\"Default pagination\\\"></ngb-pagination>\\n\\n\"","import { AfterViewInit, Component, OnDestroy, OnInit } from '@angular/core';\nimport { HOST } from '@angular/core/src/render3/interfaces/view';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BoardModel } from 'src/app/models/BoardModel';\nimport PageModel from 'src/app/models/PageModel';\nimport ResponseModel from 'src/app/models/ResponseModel';\nimport { ApiService } from 'src/app/service/api.service';\nimport { environment } from 'src/environments/environment';\n\n\n@Component({\n  selector: 'app-board-list',\n  templateUrl: './board-list.component.html',\n  styleUrls: ['./board-list.component.css']\n})\nexport class BoardListComponent implements OnInit{\n  apiUrl : string = environment.apiHost;\n  boards : BoardModel[];\n  pager : PageModel;\n  prefix : number = 6;\n\n  constructor(private route : ActivatedRoute, private apiService : ApiService, private router : Router) { \n\n  }\n  ngOnInit() {\n    this.pager = {\n      pageSize: 12,\n      maxSize: 2,\n    } as PageModel\n    this.getList(Number(this.route.snapshot.queryParamMap.get('page')) || 0);\n    //this.pagingList(pager);\n  }\n  \n  getList(curPage : Number){\n    const boards$ = this.apiService.get_api_request_signin(`${this.apiUrl}/board?page=${curPage}&pageSize=${this.pager.pageSize}&maxSize=${this.pager.maxSize}`);\n    boards$.subscribe((res : ResponseModel) => {\n      if(res.success = true){\n        this.boards = res.data.list;\n        this.pager = res.data.pager;   \n      }\n    });\n  }\n\n  detail_view(id : number){\n    this.router.navigateByUrl(`/board/${id}?page=${this.pager.page}`);\n  }\n  pageChanged(page : number){\n    this.pager.page = page;\n    this.getList(page);\n  }\n\n  loadImg(id : number) {\n    if(id == null || id == undefined){\n      return 'assets/img/lazyImage.jpg';\n    }\n    return `${this.apiUrl}/resource/image?id=${id}`;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from 'src/app/auth/auth.guard';\nimport { BoardDetailComponent } from './board-detail/board-detail.component';\nimport { BoardInsertFormComponent } from './board-insert-form/board-insert-form.component';\nimport { BoardListComponent } from './board-list/board-list.component';\nimport { BoardComponent } from './board.component';\n\nconst routes: Routes = [\n  {\n    path : 'board', component: BoardComponent,  canActivate: [AuthGuard] , \n    children:[\n      {path : '', component: BoardListComponent,  canActivate: [AuthGuard] , },\n      {path : 'list', component: BoardListComponent,  canActivate: [AuthGuard] , },\n      {path : 'insert', component: BoardInsertFormComponent,  canActivate: [AuthGuard] , },\n      {path : ':id', component: BoardDetailComponent,  canActivate: [AuthGuard] , },\n    ]\n\n  },  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BoardRoutingModule { }\n\n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2JvYXJkL2JvYXJkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<section class=\\\"py-5 text-center container\\\">\\n  <div class=\\\"row py-lg-5\\\">\\n    <div class=\\\"col-lg-6 col-md-8 mx-auto\\\">\\n      <h1 class=\\\"fw-light\\\">Board</h1>\\n      <p class=\\\"lead text-muted\\\">There is simple board. You can view simple board, also insert board with photo </p>\\n      <p>\\n        <a routerLink=\\\"./list\\\" routerLinkActive=\\\"active\\\" class=\\\"btn btn-primary my-2\\\">Board List</a>&nbsp;\\n        <a routerLink=\\\"./insert\\\" routerLinkActive=\\\"active\\\" class=\\\"btn btn-primary my-2\\\">Insert board</a>\\n      </p>\\n    </div>\\n  </div>\\n</section>\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css']\n})\nexport class BoardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BoardDetailComponent } from './board-detail/board-detail.component';\nimport { BoardListComponent } from './board-list/board-list.component';\nimport { BoardInsertFormComponent } from './board-insert-form/board-insert-form.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BoardComponent } from './board.component';\nimport { BoardRoutingModule } from './board-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'\n\n\n@NgModule({\n  declarations: [\n    BoardComponent,\n    BoardDetailComponent,\n    BoardListComponent,\n    BoardInsertFormComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BoardRoutingModule,\n    HttpClientModule,\n    CommonModule, //루트 모듈이 아니므로 CommonModule을 import해준다.\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n  ],\n  exports: [\n    BoardComponent,\n    BoardDetailComponent,\n    BoardListComponent,\n    BoardInsertFormComponent,\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA  //앵귤러 전용 태그 사용을 위한 스키마\n  ],\n})\nexport class BoardModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<section class=\\\"py-5 text-center container\\\">\\n  <div class=\\\"row py-lg-5\\\">\\n    <div class=\\\"col-lg-6 col-md-8 mx-auto\\\">\\n      <h1 class=\\\"fw-light\\\">LOGIN</h1>\\n      <p class=\\\"lead text-muted\\\">Auth to use board service!</p>\\n    </div>\\n  </div>\\n</section>\\n<div class=\\\"col-md-7 col-lg-12\\\">\\n  <form class=\\\"needs-validation\\\" [formGroup]=\\\"insertForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"row g-3\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <label for=\\\"email\\\" class=\\\"form-label\\\">이메일</label>\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"Insert email\\\" formControlName=\\\"email\\\" required >\\n        <div class=\\\"invalid-feedback\\\">\\n          <app-form-handler *ngIf=\\\"insertForm.get('email').errors\\\" [formGroupErrors]='insertForm.get(\\\"email\\\").errors'></app-form-handler>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-6\\\">\\n        <label for=\\\"password\\\" class=\\\"form-label\\\">비밀번호</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" formControlName=\\\"password\\\" required>\\n        <div class=\\\"invalid-feedback\\\">\\n          <app-form-handler *ngIf=\\\"insertForm.get('password').errors\\\" [formGroupErrors]='insertForm.get(\\\"password\\\").errors'></app-form-handler>\\n        </div>\\n      </div>\\n    </div>\\n    <hr class=\\\"my-4\\\">\\n    <button class=\\\"w-100 btn btn-primary btn-lg\\\" type=\\\"submit\\\" [disabled]=\\\"!insertForm.valid\\\">로그인</button>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport ResponseModel from 'src/app/models/ResponseModel';\nimport { UserRequestModel } from 'src/app/models/UserModel';\nimport { ApiService } from 'src/app/service/api.service';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  apiUrl = environment.apiHost;\n  formData : FormData;\n  insertForm: FormGroup;  //여러개의 FormControl을 다루기 위해 FormGroup 사용\n  userReqModel : UserRequestModel;\n\n\n  constructor(private apiService : ApiService, private fb: FormBuilder, private router : Router, private authService : AuthService) { \n    this.insertForm = this.fb.group({   //유효성 체크.\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    });\n    this.userReqModel = {} as UserRequestModel\n  }\n\n  ngOnInit() {\n    \n  }\n  updateRequestForm(){\n    const { email, password } = this.insertForm.controls;\n    this.userReqModel.email = email.value\n    this.userReqModel.password = password.value\n  }\n\n  onSubmit(){\n    this.updateRequestForm()\n    console.log(this.userReqModel);\n    this.apiService.login_api(this.userReqModel)\n    .subscribe((response : ResponseModel) => {\n      if(response.success == true){\n        console.log('성공');\n        alert(\"로그인에 성공했습니다.\")\n        //login setting\n        const token = this.apiService.getLoginToken();\n        this.authService.loginSet(token);\n        this.router.navigateByUrl('/');\n      }\n      else{\n        alert(\"로그인에 실패했습니다.\")\n      }\n    });\n    \n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL21haW4vbWFpbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<section class=\\\"py-5 text-center container\\\">\\n  <div class=\\\"row py-lg-5\\\">\\n    <div class=\\\"col-lg-6 col-md-8 mx-auto\\\">\\n      <h1 class=\\\"fw-light\\\">There is Main page!!</h1>\\n    </div>\\n  </div>\\n</section>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiHost: 'http://172.30.1.34:8080/api/v1',  //\n  //apiHost: 'http://172.30.1.58:8080/api/v1',\n  clientHost: '172.30.1.34:4200', //클라이언트 서버 주소\n  clientSecret: '27418175-4c00-42da-85ec-c1bc70cff130'  \n  //clientSecret: '3bbfbd01-f227-4fc9-bfe0-30ca85e98b2a'\n};\n\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}